generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String?
  password String?
  age      Int?
  gender   String?
  email    String    @unique
  googleId String?   @unique
  avatar   String?
  bio      String?
  hobbies  String[]  @default([])
  events   Event[]
  Comment  Comment[]
}

model Event {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  additionalNotes String
  endTime         String
  startTime       String
  location        String
  type            String
  guestList       String[]
  description     String
  date            DateTime
  invitationSent  Boolean
  coverImage      String    @default("https://utfs.io/f/W6SBtRWXE5Y4RkL3yawLgUf0Nm1WvPcMlXAhQ35brGe4FuI6")
  activities      String[]
  userId          String    @db.ObjectId
  user            User      @relation(fields: [userId], references: [id])
  guests          Guest[]
  comments        Comment[]
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  eventId   String   @db.ObjectId
  userId    String   @db.ObjectId
  comment   String
  userName  String
  imageUrl  String?
  gifUrl    String?
  user      User     @relation(fields: [userId], references: [id])
  event     Event    @relation(fields: [eventId], references: [id])
  createdAt DateTime @default(now())
}

model Guest {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  email       String
  eventName   String?
  eventId     String           @db.ObjectId
  event       Event            @relation(fields: [eventId], references: [id])
  status      InvitationStatus
  responsedAt DateTime?
}

enum InvitationStatus {
  ACCEPTED
  PENDING
  DECLINED
}
